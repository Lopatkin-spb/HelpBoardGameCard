plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'androidx.navigation.safeargs' //add '.kotlin' after full migration
    id 'kotlin-kapt'
}

android {
    compileSdk 33
    buildToolsVersion "33.0.0"

    defaultConfig {
        applicationId "space.lopatkin.spb.helpboardgamecard"
        minSdkVersion 26
        targetSdk 33
        versionCode 1
        versionName "0.2.0"

        // For testing room for migrations
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true"
                ]
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildFeatures {
        viewBinding true
    }

}

tasks.withType(Test) {
    useJUnitPlatform()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(path: ':keyboard')

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    //kotlin
    implementation 'androidx.core:core-ktx:1.7.0'

    /*
     * Android Jetpack: Appcompat (+ material design)
     */
    implementation "androidx.appcompat:appcompat:1.6.1"

    /*
     * Android Jetpack: ViewModel & Lifecycle
     */
    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    /*
     * Xml
     */
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    /*
     * Android Jetpack: Navigation
     */
    def navigation_version = "2.6.0"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    /*
     * Android Jetpack: Room
     */
    def room_version = "2.5.2"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    /*
     * Dagger 2
     */
    def dagger_version = "2.40.1"
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "javax.inject:javax.inject:1"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    /*
     * For work synchronously on background threads (kotlin + coroutines)
     */
    implementation 'androidx.work:work-runtime-ktx:2.8.1'

    /*
     * For inner events (not for kotlin)
     */
    implementation "org.greenrobot:eventbus:3.3.1"

    /*
     * Multithreading: Coroutines
     */
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.8.0"

    /*
     * Jetpack: Tests
     */
    androidTestImplementation 'androidx.test:core-ktx:1.5.0' // Kotlin extensions for androidX core
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.5' // Kotlin extensions for androidX junit

    testImplementation("org.junit.jupiter:junit-jupiter:5.8.2")

    // Tests - Mockito for mocks
    testImplementation 'org.mockito:mockito-core:4.0.0'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:4.0.0'
    testImplementation 'org.mockito:mockito-inline:4.0.0' // For mocks final classes (like usecases)

}
